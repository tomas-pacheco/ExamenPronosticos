ggplot(aes(x = obsahead, y = value, group = variable, color = variable),
data = sensibility_vacunas) +
geom_line(size = 0.7) +
scale_color_manual(name = "", labels = c("t-test", "Wilcoxon"),
values = c(colores[1], colores[4]))+
theme_bw() +
xlab("Observaciones adelante") +
ylab("p-valor") +
ylim(0,1) +
xlim(0,170) +
labs(title = "Análisis de sensibilidad - Llegada de vacunas",
caption = "Fuente: elaboración propia") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom") +
geom_hline(yintercept=0.1, linetype="dashed", color = colores[5])+
geom_hline(yintercept=0.05, linetype="dashed", color = colores[5])+
geom_hline(yintercept=0.01, linetype="dashed", color = colores[5]) +
scale_x_continuous(n.breaks = 20) +
annotate("text", x = 150, y = 0.03, label = "p<0.01")+
annotate("text", x = 150, y = 0.07, label = "p<0.05")+
annotate("text", x = 150, y = 0.12, label = "p<0.10")
ggsave(file="sensitivity_vacunas.eps", width=6.5, height=4, dpi=300)
# Vamos a hacer un analisis de potencia.
# Para ello, nos construiremos una función. Esta exporta un data frame con los
# retornos anormales ficticios y su potencia asociada.
power_analysis <- function(event, bound){
# Definimos los valores del retorno anormal hipotético
sim_left_assumed <- seq(from = -bound, to = 0, by = 0.005)
sim_right_assumed <- seq(from = 0.005, to = bound, by = 0.005)
sim_assumed <- seq(from = -bound, to = bound, by = 0.005)
event_left <- 0+qt(0.025,df=length(event)-1)*sd(event)/sqrt(length(event))
event_right <- 0+qt(0.975,df=length(event)-1)*sd(event)/sqrt(length(event))
t_left_event <-(event_left - sim_left_assumed)/(sd(event)/sqrt(length(event)))
t_right_event <-(event_right - sim_right_assumed)/(sd(event)/sqrt(length(event)))
power_left <- pt(t_left_event,df=length(event)-1, lower.tail = TRUE)
power_right <- 1-pt(t_right_event,df=length(event)-1)
power <- append(power_left,power_right)
export <- data.frame(sim_assumed, power)
return(export)
}
# El input de la función son los retornos anormales para cada evento y las cotas
# de los retornos.
# Llamamos a la función para cada uno de los eventos y luego graficamos.
power_anuncio <- power_analysis(AR_anuncio_siete, 2)
p1 <- ggplot(aes(x = sim_assumed, y = power ), data = power_anuncio) +
geom_segment(aes(x = mean(AR_anuncio_siete), y = 0,
xend = mean(AR_anuncio_siete), yend = 0.405, colour = "segment"),
size = 1, col = colores[3]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[1]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Cuarentena - 19/03/20") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_vicentin <- power_analysis(AR_vicentin_siete, 1.5)
p2 <- ggplot(aes(x = sim_assumed, y = power ), data = power_vicentin) +
geom_segment(aes(x = mean(AR_vicentin_siete), y = 0,
xend = mean(AR_vicentin_siete), yend = 0.035, colour = "segment"),
size = 1, col = colores[1]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[2]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Vicentin - 21/06/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_maradona <- power_analysis(AR_maradona_siete, 1)
p3 <- ggplot(aes(x = sim_assumed, y = power ), data = power_maradona) +
geom_segment(aes(x = mean(AR_maradona_siete), y = 0,
xend = mean(AR_maradona_siete), yend = 0.03, colour = "segment"),
size = 1, col = colores[4]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[3]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Funeral Maradona - 26/11/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_vacunas <- power_analysis(AR_vacunas_siete, 1)
p4 <- ggplot(aes(x = sim_assumed, y = power ), data = power_vacunas) +
geom_segment(aes(x = mean(AR_vacunas_siete), y = 0,
xend = mean(AR_vacunas_siete), yend = 0.125, colour = "segment"),
size = 1, col = colores[2]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[4]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Llegada vacunas - 24/12/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
library(gridExtra)
p2
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
colores <- c("#00ABC5","#cfb0b4" ,"#ff3c84","#FF7F32", "#edf71c", "#941cf7")
power_anuncio <- power_analysis(AR_anuncio_siete, 2)
p1 <- ggplot(aes(x = sim_assumed, y = power ), data = power_anuncio) +
geom_segment(aes(x = mean(AR_anuncio_siete), y = 0,
xend = mean(AR_anuncio_siete), yend = 0.405, colour = "segment"),
size = 1, col = colores[3]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[1]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Cuarentena - 19/03/20") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_vicentin <- power_analysis(AR_vicentin_siete, 1.5)
p2 <- ggplot(aes(x = sim_assumed, y = power ), data = power_vicentin) +
geom_segment(aes(x = mean(AR_vicentin_siete), y = 0,
xend = mean(AR_vicentin_siete), yend = 0.035, colour = "segment"),
size = 1, col = colores[1]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[2]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Vicentin - 21/06/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_maradona <- power_analysis(AR_maradona_siete, 1)
p3 <- ggplot(aes(x = sim_assumed, y = power ), data = power_maradona) +
geom_segment(aes(x = mean(AR_maradona_siete), y = 0,
xend = mean(AR_maradona_siete), yend = 0.03, colour = "segment"),
size = 1, col = colores[4]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[3]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Funeral Maradona - 26/11/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_vacunas <- power_analysis(AR_vacunas_siete, 1)
p4 <- ggplot(aes(x = sim_assumed, y = power ), data = power_vacunas) +
geom_segment(aes(x = mean(AR_vacunas_siete), y = 0,
xend = mean(AR_vacunas_siete), yend = 0.125, colour = "segment"),
size = 1, col = colores[2]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[4]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Llegada vacunas - 24/12/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
ggplot(aes(x = obsahead, y = value, group = variable, color = variable),
data = sensibility_vicentin) +
geom_line(size = 0.7) +
scale_color_manual(name = "", labels = c("t-test", "Wilcoxon"),
values = c(colores[1], colores[4]))+
theme_bw() +
xlab("Observaciones adelante") +
ylab("p-valor") +
ylim(0,1) +
labs(title = "Análisis de sensibilidad - Expropiación de Vicentin",
caption = "Fuente: elaboración propia") +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "bottom") +
geom_hline(yintercept=0.1, linetype="dashed", color = colores[3])+
geom_hline(yintercept=0.05, linetype="dashed", color = colores[3])+
geom_hline(yintercept=0.01, linetype="dashed", color = colores[3]) +
scale_x_continuous(n.breaks = 20) +
annotate("text", x = 400, y = 0.03, label = "p<0.01")+
annotate("text", x = 400, y = 0.07, label = "p<0.05")+
annotate("text", x = 400, y = 0.12, label = "p<0.10")
ggplot(aes(x = days, y = ars), data = AR_anuncio_plot) +
theme_bw() +
geom_point(size= 1.5) +
geom_line(aes(x = days2, y = ars2), color = colores[1]) +
geom_hline(yintercept = 0, color = colores[3], size = 1) +
labs(title = "Retornos anormales luego del evento",
subtitle = "Anuncio de cuarentena",
caption = "Fuente: elaboración propia",
x = "Días post evento",
y = "Retorno anormal") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
AR_anuncio_plot <- data.frame(
AR_anuncio,
seq(1, length(AR_anuncio),1),
c(AR_anuncio[1:7], rep(NA, length(AR_anuncio)-7)),
c(seq(1, 7,1),  rep(NA, length(AR_anuncio)-7))
)
colnames(AR_anuncio_plot) <- c("ars", "days", "ars2", "days2")
ggplot(aes(x = days, y = ars), data = AR_anuncio_plot) +
theme_bw() +
geom_point(size= 1.5) +
geom_line(aes(x = days2, y = ars2), color = colores[1]) +
geom_hline(yintercept = 0, color = colores[3], size = 1) +
labs(title = "Retornos anormales luego del evento",
subtitle = "Anuncio de cuarentena",
caption = "Fuente: elaboración propia",
x = "Días post evento",
y = "Retorno anormal") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5))
nuestra.paleta <- function(){
set.seed(444)
plot(rnorm(100,0,1), rnorm(100,0,1)+1)
abline(h = 4, col = colores[1], lwd = 5)
abline(h = 3, col = colores[2], lwd = 5)
abline(h = 2, col = colores[3], lwd = 5)
abline(h = 1, col = colores[4], lwd = 5)
abline(h = 0, col = colores[5], lwd = 5)
abline(h = -1, col = colores[6], lwd = 5)
}
nuestra.paleta
nuestra.paleta()
colores <- c("#00ABC5","#edf71c",  "#ff3c84","#FF7F32", "#cfb0b4", "#941cf7")
power_anuncio <- power_analysis(AR_anuncio_siete, 2)
p1 <- ggplot(aes(x = sim_assumed, y = power ), data = power_anuncio) +
geom_segment(aes(x = mean(AR_anuncio_siete), y = 0,
xend = mean(AR_anuncio_siete), yend = 0.405, colour = "segment"),
size = 1, col = colores[3]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[1]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Cuarentena - 19/03/20") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_vicentin <- power_analysis(AR_vicentin_siete, 1.5)
p2 <- ggplot(aes(x = sim_assumed, y = power ), data = power_vicentin) +
geom_segment(aes(x = mean(AR_vicentin_siete), y = 0,
xend = mean(AR_vicentin_siete), yend = 0.035, colour = "segment"),
size = 1, col = colores[1]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[2]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Vicentin - 21/06/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_maradona <- power_analysis(AR_maradona_siete, 1)
p3 <- ggplot(aes(x = sim_assumed, y = power ), data = power_maradona) +
geom_segment(aes(x = mean(AR_maradona_siete), y = 0,
xend = mean(AR_maradona_siete), yend = 0.03, colour = "segment"),
size = 1, col = colores[4]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[3]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Funeral Maradona - 26/11/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_vacunas <- power_analysis(AR_vacunas_siete, 1)
p4 <- ggplot(aes(x = sim_assumed, y = power ), data = power_vacunas) +
geom_segment(aes(x = mean(AR_vacunas_siete), y = 0,
xend = mean(AR_vacunas_siete), yend = 0.125, colour = "segment"),
size = 1, col = colores[2]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[4]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Llegada vacunas - 24/12/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
library(gridExtra)
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
p2 <- ggplot(aes(x = sim_assumed, y = power ), data = power_vicentin) +
geom_segment(aes(x = mean(AR_vicentin_siete), y = 0,
xend = mean(AR_vicentin_siete), yend = 0.035, colour = "segment"),
size = 1, col = colores[1]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[2]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Vicentin - 11/06/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_maradona <- power_analysis(AR_maradona_siete, 1)
p3 <- ggplot(aes(x = sim_assumed, y = power ), data = power_maradona) +
geom_segment(aes(x = mean(AR_maradona_siete), y = 0,
xend = mean(AR_maradona_siete), yend = 0.03, colour = "segment"),
size = 1, col = colores[4]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[3]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Funeral Maradona - 26/11/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
power_vacunas <- power_analysis(AR_vacunas_siete, 1)
p4 <- ggplot(aes(x = sim_assumed, y = power ), data = power_vacunas) +
geom_segment(aes(x = mean(AR_vacunas_siete), y = 0,
xend = mean(AR_vacunas_siete), yend = 0.125, colour = "segment"),
size = 1, col = colores[2]) +
geom_line(aes(x = sim_assumed , y = power), size = 1, col = colores[4]) +
theme_minimal() +
ylab("Potencia") +
xlab("Retorno anormal hipotético") +
ggtitle(label = "Curva de potencia",
subtitle = "Llegada vacunas - 24/12/2020 ") +
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position = "none" )
grid.arrange(p1, p2, p3, p4, nrow = 2, ncol = 2)
options(scipen=999)
dir <- "G:\\Mi unidad\\UdeSA\\Pronósticos\\Final\\Data\\dep"
setwd(dir)
colores <- c("#00ABC5","#cfb0b4" ,"#ff3c84","#FF7F32", "#edf71c", "#941cf7")
colores2 <- c("#f5fa7b", "#3cffb7", "#ffdaaa", "#fa66f3",
"#f84a42","#9e9d9c", "#c3f842", "#3cff56")
data <- read.csv("Data_Final_PF2.csv")
data <- data[,-2]
data <- na.omit(data)
rownames(data) <- data$time
colnames(data)
data <- data[,-c(12,13,14,18,19,20,21,22,23)]
setwd("C:\\Users\\Tomas\\Desktop\\Pronosticos_Final\\Script\\Graficos")
options(scipen=999)
# Seteamos el directorio.
dir <- "G:\\Mi unidad\\UdeSA\\Pronósticos\\Final\\Data\\dep"
dir <- "C:\\Users\\Abi\\Downloads"
setwd(dir)
# Definimos la paleta de colores que vamos a usar.
colores <- c("#00ABC5","#cfb0b4" ,"#ff3c84","#FF7F32", "#edf71c", "#941cf7")
colores2 <- c("#f5fa7b", "#3cffb7", "#ffdaaa", "#fa66f3",
"#f84a42","#9e9d9c", "#c3f842", "#3cff56")
dir <- "G:\\Mi unidad\\UdeSA\\Pronósticos\\Final\\Data\\dep"
setwd(dir)
colores <- c("#00ABC5","#cfb0b4" ,"#ff3c84","#FF7F32", "#edf71c", "#941cf7")
data <- read.csv("Data_Final_PF2.csv")
data <- data[,-2]
data <- na.omit(data)
rownames(data) <- data$time
colnames(data)
data <- data[,-c(12,13,14,18,19,20,21,22,23)]
setwd("C:\\Users\\Tomas\\Desktop\\Pronosticos_Final\\Script\\Graficos")
data$muertes.arg.rel <- data$muertosarg/data$muertesmundo
data$muertes.arg.rel<-ifelse(is.na(data$muertes.arg.rel),0,data$muertes.arg.rel)
data$casos.arg.rel <- data$casosarg/data$casosmundo
data$casos.arg.rel<-ifelse(is.na(data$casos.arg.rel),0,data$casos.arg.rel)
data <- data[, -c(2,15,16,17,18)]
library(xts)
for (i in colnames(data)[-(1)]){
assign(i, xts(data[[i]], order.by=as.Date(rownames(data),"%Y-%m-%d")) )
}
library(ggplot2)
library(ggfortify)
library(forecast)
autoplot(sentsmooth, ts.colour = colores[1]) +
ggtitle("Evolución del sentimiento de Alberto Fernández") +
xlab("Tiempo") +
ylab("Sentimiento") +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5)) +
labs(x = "Tiempo",
y = "Sentimiento",
title = "Evolución del sentimiento de Alberto Fernández",
caption = "Fuente: elaboración propia")
autoplot(twfav, ts.colour = colores[2]) +
ggtitle("Evolución de los favoritos que recibe AF en Twitter") +
xlab("Tiempo") +
ylab("Cantidad de favoritos") +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5)) +
labs(caption = "Fuente: elaboración propia")
in.sample <- data[1:425,]
out.of.sample <- data[426:483,]
arima.1 <- auto.arima(in.sample[,2])
summary(arima.1)
arima.to.table <- arima(in.sample[,2],order = c(5,0,1))
act1 <- checkresiduals(arima.1, lag = 13)
test <- round(act1$p.value, 2)
ets.1 <- ets(in.sample[,2])
act2 <- Box.test(ets.1$residuals, lag = 13, type = c("Ljung-Box"))
test2 <- round(act2$p.value, 2)
arimax.1 <- Arima(in.sample[,2], order = c(5,0,1),
xreg = as.matrix(in.sample[,3:length(in.sample)]))
arimax.to.table <- arima(in.sample[,2],order = c(5,0,1),
xreg = as.matrix(in.sample[,4:length(in.sample)]))
act3 <- Box.test(arimax.1$residuals, lag = 13, type = c("Ljung-Box"))
test3 <- round(act3$p.value, 2)
library(ARDL)
library(dynlm)
order.adl.dl <- auto_ardl(sentsmooth ~ twfav + twret + reservasbcra + tasaint + basemon + tcdolar + casosarg + muertosarg +
vacunasarg + maxtemp + mintemp + muertes.arg.rel + casos.arg.rel,
data = in.sample[,-1], max_order = 5)
adl.dl <- ardl(sentsmooth ~ twfav + twret + reservasbcra + tasaint + basemon + tcdolar +
casosarg + muertosarg + vacunasarg + maxtemp +
mintemp + muertes.arg.rel + casos.arg.rel,
data = in.sample[,-1], order = as.vector(order.adl.dl$best_order))
adl.dl <- ardl(sentsmooth ~ twfav + twret + reservasbcra + tasaint + basemon + tcdolar +
casosarg + muertosarg + vacunasarg + maxtemp +
mintemp + muertes.arg.rel + casos.arg.rel,
data = in.sample[,-1], order = as.vector(order.adl.dl$best_order))
adl <- adl.dl$full_formula
adl.1 <- dynlm(adl, data = adl.dl$data)
identical(adl.dl$coefficients, adl.1$coefficients)
act4 <- Box.test(adl.1$residuals, lag = 13, type = c("Ljung-Box"))
test4 <- round(act4$p.value, 4)
model <- lm(rnorm(100,0,1) ~ rnorm(100,20,3))
stargazer(arima.to.table, arimax.to.table, model, adl.1,
align = TRUE,
dep.var.labels = c("SentIndex", "SentIndex", "SentIndex", "SentIndex"),
keep.stat = c("n", "ll", "rsq"),
no.space = TRUE,
type = "latex")
library(vars)
reservas.est <- diff(in.sample[,5])
dolar.est <- diff(in.sample[,8])
in.sample.d <- cbind(in.sample[-1,-c(5,8)],reservas.est, dolar.est)
in.sample.d <- in.sample.d[,2:15]
var.d <- VARselect(in.sample.d, type ="const")
var.d$selection
var.dl <- VAR(in.sample.d, p = 6, type = "const")
serial.test(var.dl)
variables.var <- colnames(in.sample.d)
PCA1 <- prcomp(in.sample[,3:15], scale =TRUE)
PCA1$sdev^2
library(dplyr)
PC.is <- scale(in.sample[,3:15])%*%PCA1$rotation
PC <- scale(data[,3:15])%*%PCA1$rotation
favar.data <- cbind(in.sample[,2], PC.is[,1:4])
VARselect(favar.data, lag.max = 10, type = c("both"))
favar<- VAR(favar.data, p= 8, type = "both")
summary(favar)
serial.test(favar)
favar$varresult$X
stargazer(arima.to.table, arimax.to.table, model, adl.1,
var.dl$varresult$sentsmooth, favar$varresult$X,
align = TRUE,
dep.var.labels = c("SentIndex", "SentIndex", "SentIndex",
"SentIndex","SentIndex", "SentIndex"),
omit = c("mes01", "mes02", "mes03", "mes04",
"mes05", "mes06", "mes07", "mes08",
"mes09", "mes10", "mes11", "sd1",
"sd2", "sd3"),
keep.stat = c("n", "ll", "rsq"),
no.space = TRUE,
type = "latex")
var.dl <- VAR(in.sample.d, p = 6, type = "trend")
summary(var.dl)
summary(var.dl)
stargazer(var.dl$varresult$sentsmooth)
stargazer(var.dl$varresult$sentsmooth, type = "text")
get_eig(PCA1)
library(devtools)
get_eig(PCA1)
library(factoextra)
install.packages("factoextra")
library(factoextra)
get_eig(PCA1)
eig <- get_eig(PCA1) # probar esto
View(eig)
View(eig)
eig$nam <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6",
"PC7", "PC8", "PC9", "PC10", "PC11", "PC12")
eig$nam <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6",
"PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13")
View(eig)
eig <- as.matrix(get_eig(PCA1))
View(eig)
eig$nam <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6",
"PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13")
eig[,4] <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6",
"PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13")
View(eig)
eig <- as.matrix(get_eig(PCA1))
View(eig)
eigr <- matrix(NA, 13, 4)
eigr[,1] <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6",
"PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13")
View(eigr)
eig[,2]
eigr[,2] <- round(eig[,2],4)
eigr[,1] <- c("PC1", "PC2", "PC3", "PC4", "PC5", "PC6",
"PC7", "PC8", "PC9", "PC10", "PC11", "PC12", "PC13")
eigr[,2] <- round(eig[,1],4)
eigr[,3] <- round(eig[,2],4)
eigr[,4] <- round(eig[,3],4)
View(eigr)
eig
colnames(eigr) <- c("Autovalor",
" Porcentaje de varianza explicada",
"Porcentaje de varianza explicada acumulada")
colnames(eigr) <- c("Componente", "Autovalor",
" Porcentaje de varianza explicada",
"Porcentaje de varianza explicada acumulada")
stargazer(eigr)
